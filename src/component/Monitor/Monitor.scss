$ease-out-quint:cubic-bezier(0.230, 1.000, 0.320, 1.000);
$ease-in-quint:cubic-bezier(0.755, 0.050, 0.855, 0.060);

$terminal-green: #49e18c;
$terminal-red: #8b281d;
$terminal-pink: #be2ba9;

$font--terminal: 1rem Inconsolata, monospace;

.monitor {
  position: relative;
  font: 1rem Inconsolata, monospace;
  overflow: hidden;
  border-radius: 3px;
  box-sizing: border-box;
  height: 100%;

  &.green {
    color: $terminal-green;
    text-shadow: 0 0 5px $terminal-green;
    border-color: $terminal-green;

    ::selection {
      background: $terminal-green;
    }

    h1,
    table > thead {
      background-color: $terminal-green;
    }

    .monitor-screen.screen-on {
      background-image: radial-gradient( rgba( $terminal-green, 0.2 ), black 120% );
    }

    .button {
      &[disabled] {
        color: darken($terminal-green, 30%);
        text-shadow: 0 0 5px darken($terminal-green, 10%);
      }

      &:focus {
        background-color: $terminal-green;
      }
    }
  }

  &.pink {
    color: $terminal-pink;
    text-shadow: 0 0 5px $terminal-pink;
    border-color: $terminal-pink;

    ::selection {
      background: $terminal-pink;
    }

    h1,
    table > thead {
      background-color: $terminal-pink;
    }

    .monitor-screen.screen-on {
      background-image: radial-gradient( rgba( $terminal-pink, 0.2 ), black 120% );
    }

    .button {
      &[disabled] {
        color: darken($terminal-pink, 20%);
        text-shadow: 0 0 5px darken($terminal-pink, 10%);
      }

      &:focus {
        background-color: $terminal-pink;
      }
    }
  }

  &.red {
    color: $terminal-red;
    text-shadow: 0 0 5px $terminal-red;
    border-color: $terminal-red;

    ::selection {
      background: $terminal-red;
    }

    h1,
    table > thead {
      background-color: $terminal-red;
    }

    .monitor-screen.screen-on {
      background-image: radial-gradient( rgba( $terminal-red, 0.4 ), black 120% );
    }

    .button {
      &[disabled] {
        color: darken($terminal-red, 10%);
        text-shadow: 0 0 5px darken($terminal-red, 10%);
      }

      &:focus {
        background-color: $terminal-red;
      }
    }
  }
}

::selection {
  color: black;
  text-shadow: none;
}

.monitor-screen {
  border-radius: 5px;
  background-color: black;
  padding: 1rem;
  height: 100%;
  box-sizing: border-box;

  &.screen-on {
    background-image: radial-gradient( rgba( $terminal-green, 0.2 ), black 120% );

    .monitor-screen-content {
      animation: turn-on 4s linear;
      animation-fill-mode:forwards;
    }

    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: repeating-linear-gradient( 0deg, rgba( black, 0.55 ), rgba( black, 0.55 ) 1px, transparent 1px, transparent 2px );
      pointer-events: none;
      animation:flicker 0.15s infinite;
    }
  }

  &.screen-off {
    .monitor-screen-content {
      animation: turn-off 0.55s $ease-out-quint;
      animation-fill-mode:forwards;
    }
  }
}

.monitor-screen-content {
  height: 100%;
  box-sizing: border-box;
  display: grid;
  grid-template-areas: "child" "controls";
  grid-template-rows: 1fr auto;
}

.monitor-screen-content > div:first-child {
  grid-area: child;
}

.monitor-controls {
  grid-area: controls;

  .button:not(:first-child) {
    margin-left: 5px;
  }
}

.toggle-monitor-on {
  height: 38px;
  margin-left: 1rem;
}

.button {
  color: inherit;
  font-family: inherit;
  text-shadow: inherit;
  text-transform: lowercase;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;

  &::before {
    content: "[";
  }

  &::after {
    content: "]";
  }

  &.active {
    font-weight: 900;

    &::before {
      content: ">[";
    }
  }

  &:focus {
    outline: none;
    color: black;
    text-shadow: 0 0 5px black;
  }
}

input {
  max-width: 100%;
  background: none;
  padding: 0;
  color: inherit;
  font-size: inherit;
  font-family: Inconsolata, monospace;
  text-shadow: inherit;
  border: none;
}

h1 {
  padding-left: .5rem;
}

h1,
table > thead {
  color: black;
  text-shadow: 0 0 5px black;
}

@keyframes flicker{
  $steps:20;
  @for $i from 0 through $steps{
    #{percentage($i*(1/$steps))}{
      opacity:random();
    }
  }
}
@keyframes turn-on{
  0%{
    transform:scale(1,0.8) translate3d(0,0,0);
    -webkit-filter:brightness(30);
    filter:brightness(30);
    opacity:1;
  }
  3.5%{
    transform:scale(1,0.8) translate3d(0,100%,0);
  }

  3.6%{
    transform:scale(1,0.8) translate3d(0,-100%,0);
    opacity:1;
  }

  9%{
    transform:scale(1.3,0.6) translate3d(0,100%,0);
    -webkit-filter:brightness(30);
    filter:brightness(30);
    opacity:0;
  }



  11%{
    transform:scale(1,1) translate3d(0,0,0);
    -webkit-filter:contrast(0) brightness(0) ;
    filter:contrast(0) brightness(0);
    opacity:0;
  }

  100%{
    transform:scale(1,1) translate3d(0,0,0);
    -webkit-filter:contrast(1) brightness(1.2) saturate(1.3);
    filter:contrast(1) brightness(1.2) saturate(1.3);
    opacity:1;
  }
}
@keyframes turn-off{
  0%{
    transform:scale(1,1.3) translate3d(0,0,0);
    -webkit-filter:brightness(1);
    filter:brightness(1);
    opacity:1;
  }
  60%{
    transform:scale(1.3,0.001) translate3d(0,0,0);
    -webkit-filter:brightness(10);
    filter:brightness(10);
  }
  100%{
    animation-timing-function:$ease-in-quint;
    transform:scale(0.000,0.0001) translate3d(0,0,0);
    -webkit-filter:brightness(50);
    filter:brightness(50);
  }
}